name: build
run-name: build ${{github.repository}} by ${{github.actor}}
on: [push, pull_request]
env:
  IMAGENAME: uweerikmartin/helloweb

jobs: 
  build-multiarch:
    runs-on: ubuntu-latest

    steps:
    - name: Perform Checkout
      uses: actions/checkout@v4

    - name: Evaluate Build Environment variables
      run: |
        sed -En 's/^go (.*)$/GO_VERSION=\1/p' go.mod >> $GITHUB_ENV
        sed -En 's/^.*=([0-9]*.[0-9]*.[0-9])$/VERSION=\1/p' VERSION >> $GITHUB_ENV
#        echo ${{github.repository}} | sed -e 's/^.*$/IMAGENAME=\L&/' >> $GITHUB_ENV

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3      

    - name: Build and push Docker linux/amd64
      run:  |
        export BUILDX_NO_DEFAULT_ATTESTATIONS=1
        docker buildx build --push --platform linux/amd64 --build-arg=GO_VERSION=${{env.GO_VERSION}} --output "type=registry,name=${{env.IMAGENAME}},push-by-digest=true" -f build/Dockerfile . 2>&1 | tee out.txt
        sed -En 's/.*exporting manifest\s(sha256:[0-9a-f]*)\s.*/SHA_LINUX_AMD64=\1/p' out.txt >> $GITHUB_ENV

    - name: Build and push Docker linux/arm64
      run:  |
        export BUILDX_NO_DEFAULT_ATTESTATIONS=1
        docker buildx build --push --platform linux/arm64 --build-arg=GO_VERSION=${{env.GO_VERSION}} --output "type=registry,name=${{env.IMAGENAME}},push-by-digest=true" -f build/Dockerfile . 2>&1 | tee out.txt
        sed -En 's/.*exporting manifest\s(sha256:[0-9a-f]*)\s.*/SHA_LINUX_ARM64=\1/p' out.txt >> $GITHUB_ENV

    - name: Build and push Docker windows/ltsc2019
      run:  |
        export BUILDX_NO_DEFAULT_ATTESTATIONS=1
        docker buildx build --push --platform windows/amd64 --build-arg=GO_VERSION=${{env.GO_VERSION}} --build-arg WINVER=ltsc2019 --output "type=registry,name=${{env.IMAGENAME}},push-by-digest=true" -f build/Dockerfile . 2>&1 | tee out.txt
        sed -En 's/.*exporting manifest\s(sha256:[0-9a-f]*)\s.*/SHA_WINDOWS_LTSC2019=\1/p' out.txt >> $GITHUB_ENV

    - name: Build and push Docker windows/ltsc2022
      run:  |
        export BUILDX_NO_DEFAULT_ATTESTATIONS=1
        docker buildx build --push --platform windows/amd64 --build-arg=GO_VERSION=${{env.GO_VERSION}} --build-arg WINVER=ltsc2022 --output "type=registry,name=${{env.IMAGENAME}},push-by-digest=true" -f build/Dockerfile . 2>&1 | tee out.txt
        sed -En 's/.*exporting manifest\s(sha256:[0-9a-f]*)\s.*/SHA_WINDOWS_LTSC2022=\1/p' out.txt >> $GITHUB_ENV

    - name: Build multiarch manifest
      run: |
        docker buildx imagetools create --tag ${{env.IMAGENAME}}:${{env.VERSION}} ${{env.IMAGENAME}}@${{env.SHA_LINUX_AMD64}} ${{env.IMAGENAME}}@${{env.SHA_LINUX_ARM64}} ${{env.IMAGENAME}}@${{env.SHA_WINDOWS_LTSC2019}} ${{env.IMAGENAME}}@${{env.SHA_WINDOWS_LTSC2022}}
