name: build
run-name: build ${{github.repository}} by ${{github.actor}}
on: [push, pull_request]

jobs: 
  build-multiplatform:
    runs-on: ubuntu-latest

    steps:
    - name: Perform Checkout
      uses: actions/checkout@v4

    - name: Evaluate Build Environment variables
      run: |
        sed -En 's/^go (.*)$/GO_VERSION=\1/p' go.mod | tee -a $GITHUB_ENV
        sed -En 's/^.*=([0-9]*.[0-9]*.[0-9]*|latest)$/VERSION=\1/p' VERSION | tee -a $GITHUB_ENV
        echo '${{github.repository}}' | sed -E 's/.*/IMAGENAME=\L&/' | tee -a $GITHUB_ENV

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3      

    - name: Build and push Docker Image for linux/amd64
      id: linux-amd64
      run:  |
        export BUILDX_NO_DEFAULT_ATTESTATIONS=1
        docker buildx build --push --platform linux/amd64 --build-arg=GO_VERSION=${{env.GO_VERSION}} --output "type=registry,name=${{env.IMAGENAME}},push-by-digest=true" --metadata-file manifest.json -f build/Dockerfile .
        echo sha=$(jq '."containerimage.digest"' -r manifest.json) | tee -a $GITHUB_OUTPUT

    - name: Build and push Docker Image for linux/arm64
      id: linux-arm64
      run:  |
        export BUILDX_NO_DEFAULT_ATTESTATIONS=1
        docker buildx build --push --platform linux/arm64 --build-arg=GO_VERSION=${{env.GO_VERSION}} --output "type=registry,name=${{env.IMAGENAME}},push-by-digest=true" --metadata-file manifest.json -f build/Dockerfile .
        echo sha=$(jq '."containerimage.digest"' -r manifest.json) | tee -a $GITHUB_OUTPUT

    - name: Build and push Docker Image for windows/ltsc2022
      id: windows-ltsc2022
      run:  |
        export BUILDX_NO_DEFAULT_ATTESTATIONS=1
        docker buildx build --push --platform windows/amd64 --build-arg=GO_VERSION=${{env.GO_VERSION}} --build-arg WINVER=ltsc2022 --output "type=registry,name=${{env.IMAGENAME}},push-by-digest=true" --metadata-file manifest.json -f build/Dockerfile .
        echo sha=$(jq '."containerimage.digest"' -r manifest.json) | tee -a $GITHUB_OUTPUT

    - name: Build and push Docker Image for windows/ltsc2019
      id: windows-ltsc2019
      run:  |
        export BUILDX_NO_DEFAULT_ATTESTATIONS=1
        docker buildx build --push --platform windows/amd64 --build-arg=GO_VERSION=${{env.GO_VERSION}} --build-arg WINVER=ltsc2019 --output "type=registry,name=${{env.IMAGENAME}},push-by-digest=true" --metadata-file manifest.json -f build/Dockerfile .
        echo sha=$(jq '."containerimage.digest"' -r manifest.json) | tee -a $GITHUB_OUTPUT

    - name: Build and push Multiplatform Manifest
      run: |
        docker manifest create ${{env.IMAGENAME}}:${{env.VERSION}} ${{env.IMAGENAME}}@${{steps.linux-amd64.outputs.sha}} ${{env.IMAGENAME}}@${{steps.linux-arm64.outputs.sha}} ${{env.IMAGENAME}}@${{steps.windows-ltsc2022.outputs.sha}} ${{env.IMAGENAME}}@${{steps.windows-ltsc2019.outputs.sha}}
