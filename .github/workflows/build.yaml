name: build
run-name: build ${{github.repository}} by ${{github.actor}}
on: [push, pull_request]

jobs: 
  build-multiarch:
    runs-on: ubuntu-latest
#    container: catthehacker/ubuntu:act-latest

    steps:
    - name: Perform Checkout
      uses: actions/checkout@v4

    - name: Setup Go Environment
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod

    - name: Cross-Compile GO
      run: |
        go mod download
        go mod verify
        CGO_ENABLED=0 GOOS=windows GOARCH=amd64 mkdir -p windows/amd64 && go build -o windows/amd64/server.exe cmd/server.go
        CGO_ENABLED=0 GOOS=linux   GOARCH=amd64 mkdir -p linux/amd64   && go build -o linux/amd64/server       cmd/server.go
        CGO_ENABLED=0 GOOS=linux   GOARCH=arm64 mkdir -p linux/arm64   && go build -o linux/arm64/server       cmd/server.go

#    - name: Evaluate GO Version
#      run: sed -En 's/^go (.*)$/GO_VERSION=\1/p' go.mod >> $GITHUB_ENV

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

#    - name: Set up QEMU
#      uses: docker/setup-qemu-action@v3
      
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        build-args: WINVER=ltsc2019
        platforms: linux/amd64,linux/arm64,windows/amd64
        file: build/Dockerfile
        tags: ${{secrets.DOCKERHUB_USERNAME}}/helloweb:latest
        provenance: false