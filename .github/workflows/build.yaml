name: build
run-name: build ${{github.repository}} by ${{github.actor}}
on: [push, pull_request]

jobs: 
  # The “build” workflow 
  build:
    env:
      PLATFORMS: 'linux/amd64,linux/arm64'

    runs-on: ubuntu-latest

    steps:
    - name: Perform Checkout
      uses: actions/checkout@v4

    - name: Setup Go Enviroment
      uses: actions/setup-go@v4
      with:
        go-version-file: go.mod
    - run: go version

    - name: compile multiplatform
      run: |
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o server-linux-arm64 cmd/server.go \
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o server-linux-arm64 cmd/server.go \
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o server-windows-amd64.exe cmd/server.go

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3      

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

#    - name: Build and push Multiarch Container Image [ ${{ env.PLATFORMS }} ]
#      run: |
#        docker buildx build --push --build-arg='GO_VERSION=${{env.GO_VERSION}}' --platform=${{ env.PLATFORMS }} -t ${{ secrets.DOCKERHUB_USERNAME }}/helloweb:latest -f build/Dockerfile.multiarch .
